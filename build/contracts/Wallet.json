{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerChanged",
      "type": "event"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "contracts/Wallet.sol"
  },
  "ast": {
    "absolutePath": "contracts/Wallet.sol",
    "exportedSymbols": {
      "Wallet": [
        70
      ]
    },
    "id": 71,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Wallet",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 70,
        "linearizedBaseContracts": [
          70
        ],
        "name": "Wallet",
        "nameLocation": "34:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "55:5:0",
            "nodeType": "VariableDeclaration",
            "scope": 70,
            "src": "47:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "47:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "eventSelector": "b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c",
            "id": 9,
            "name": "OwnerChanged",
            "nameLocation": "73:12:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 8,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldOwner",
                  "nameLocation": "94:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "86:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "86:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 7,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "112:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 9,
                  "src": "104:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "104:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "85:36:0"
            },
            "src": "67:55:0"
          },
          {
            "body": {
              "id": 17,
              "nodeType": "Block",
              "src": "142:35:0",
              "statements": [
                {
                  "expression": {
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "152:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 13,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "160:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 14,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "164:6:0",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "160:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "152:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 16,
                  "nodeType": "ExpressionStatement",
                  "src": "152:18:0"
                }
              ]
            },
            "id": 18,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "139:2:0"
            },
            "returnParameters": {
              "id": 11,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "142:0:0"
            },
            "scope": 70,
            "src": "128:49:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 29,
              "nodeType": "Block",
              "src": "202:105:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 24,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 21,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "220:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 22,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "229:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 23,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "233:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "229:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "220:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206d6574686f64206d7573742062652063616c6c65642066726f6d206f776e65722061646472657373",
                        "id": 25,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "241:47:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c155671418eaae7d5c6032bd29ced9e5a3cdf993b73669a570948d28293a96d5",
                          "typeString": "literal_string \"This method must be called from owner address\""
                        },
                        "value": "This method must be called from owner address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c155671418eaae7d5c6032bd29ced9e5a3cdf993b73669a570948d28293a96d5",
                          "typeString": "literal_string \"This method must be called from owner address\""
                        }
                      ],
                      "id": 20,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "212:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 26,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "212:77:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 27,
                  "nodeType": "ExpressionStatement",
                  "src": "212:77:0"
                },
                {
                  "id": 28,
                  "nodeType": "PlaceholderStatement",
                  "src": "299:1:0"
                }
              ]
            },
            "id": 30,
            "name": "onlyowner",
            "nameLocation": "192:9:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 19,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "202:0:0"
            },
            "src": "183:124:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 37,
              "nodeType": "Block",
              "src": "370:7:0",
              "statements": []
            },
            "functionSelector": "a6f9dae1",
            "id": 38,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 35,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 34,
                  "name": "onlyowner",
                  "nameLocations": [
                    "351:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30,
                  "src": "351:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "351:9:0"
              }
            ],
            "name": "changeOwner",
            "nameLocation": "326:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 33,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 32,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "346:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 38,
                  "src": "338:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 31,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "338:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "337:13:0"
            },
            "returnParameters": {
              "id": 36,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "370:0:0"
            },
            "scope": 70,
            "src": "317:60:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 64,
              "nodeType": "Block",
              "src": "452:111:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 54,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 50,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "478:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Wallet_$70",
                                  "typeString": "contract Wallet"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Wallet_$70",
                                  "typeString": "contract Wallet"
                                }
                              ],
                              "id": 49,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "470:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 48,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "470:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 51,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "470:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 52,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "484:7:0",
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "470:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 53,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42,
                          "src": "494:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "470:30:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e73756666696369656e742062616c616e6365",
                        "id": 55,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "502:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        },
                        "value": "Insufficient balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
                          "typeString": "literal_string \"Insufficient balance\""
                        }
                      ],
                      "id": 47,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "462:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 56,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "462:63:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 57,
                  "nodeType": "ExpressionStatement",
                  "src": "462:63:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "549:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 58,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "536:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 60,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "540:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "536:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "536:20:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "536:20:0"
                }
              ]
            },
            "functionSelector": "a9059cbb",
            "id": 65,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44,
                  "name": "onlyowner",
                  "nameLocations": [
                    "435:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30,
                  "src": "435:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "435:9:0"
              }
            ],
            "name": "transfer",
            "nameLocation": "392:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "417:3:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "401:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "401:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "427:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 65,
                  "src": "422:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "422:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "400:34:0"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "452:0:0"
            },
            "scope": 70,
            "src": "383:180:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "601:2:0",
              "statements": []
            },
            "id": 69,
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 66,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "581:2:0"
            },
            "returnParameters": {
              "id": 67,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "601:0:0"
            },
            "scope": 70,
            "src": "573:30:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 71,
        "src": "25:580:0",
        "usedErrors": [],
        "usedEvents": [
          9
        ]
      }
    ],
    "src": "0:606:0"
  },
  "bytecode": "608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610234806100326000396000f3fe6080604052600436106100295760003560e01c8063a6f9dae11461002b578063a9059cbb1461004b575b005b34801561003757600080fd5b50610029610046366004610161565b61006b565b34801561005757600080fd5b50610029610066366004610185565b6100a1565b6000546001600160a01b0316331461009e5760405162461bcd60e51b8152600401610095906101b1565b60405180910390fd5b50565b6000546001600160a01b031633146100cb5760405162461bcd60e51b8152600401610095906101b1565b8047116101115760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610095565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610147573d6000803e3d6000fd5b505050565b6001600160a01b038116811461009e57600080fd5b60006020828403121561017357600080fd5b813561017e8161014c565b9392505050565b6000806040838503121561019857600080fd5b82356101a38161014c565b946020939093013593505050565b6020808252602d908201527f54686973206d6574686f64206d7573742062652063616c6c65642066726f6d2060408201526c6f776e6572206164647265737360981b60608201526080019056fea264697066735822122082cc30643caa6ac5cc80f4e01736823febe460be3c67d0e13361a39ef81e518364736f6c63430008140033",
  "bytecodeSha1": "26004fe83166f672a7bf952c92d76096f82bdae8",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.20+commit.a1b79de6"
  },
  "contractName": "Wallet",
  "coverageMap": {
    "branches": {
      "0": {
        "Wallet.transfer": {
          "2": [
            470,
            500,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Wallet.transfer": {
          "0": [
            462,
            525
          ],
          "1": [
            536,
            556
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "6080604052600436106100295760003560e01c8063a6f9dae11461002b578063a9059cbb1461004b575b005b34801561003757600080fd5b50610029610046366004610161565b61006b565b34801561005757600080fd5b50610029610066366004610185565b6100a1565b6000546001600160a01b0316331461009e5760405162461bcd60e51b8152600401610095906101b1565b60405180910390fd5b50565b6000546001600160a01b031633146100cb5760405162461bcd60e51b8152600401610095906101b1565b8047116101115760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610095565b6040516001600160a01b0383169082156108fc029083906000818181858888f19350505050158015610147573d6000803e3d6000fd5b505050565b6001600160a01b038116811461009e57600080fd5b60006020828403121561017357600080fd5b813561017e8161014c565b9392505050565b6000806040838503121561019857600080fd5b82356101a38161014c565b946020939093013593505050565b6020808252602d908201527f54686973206d6574686f64206d7573742062652063616c6c65642066726f6d2060408201526c6f776e6572206164647265737360981b60608201526080019056fea264697066735822122082cc30643caa6ac5cc80f4e01736823febe460be3c67d0e13361a39ef81e518364736f6c63430008140033",
  "deployedSourceMap": "25:580:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;317:60;;;;;;;;;;-1:-1:-1;317:60:0;;;;;:::i;:::-;;:::i;383:180::-;;;;;;;;;;-1:-1:-1;383:180:0;;;;;:::i;:::-;;:::i;317:60::-;220:5;;-1:-1:-1;;;;;220:5:0;229:10;220:19;212:77;;;;-1:-1:-1;;;212:77:0;;;;;;;:::i;:::-;;;;;;;;;317:60;:::o;383:180::-;220:5;;-1:-1:-1;;;;;220:5:0;229:10;220:19;212:77;;;;-1:-1:-1;;;212:77:0;;;;;;;:::i;:::-;494:6:::1;470:21;:30;462:63;;;::::0;-1:-1:-1;;;462:63:0;;1346:2:1;462:63:0::1;::::0;::::1;1328:21:1::0;1385:2;1365:18;;;1358:30;-1:-1:-1;;;1404:18:1;;;1397:50;1464:18;;462:63:0::1;1144:344:1::0;462:63:0::1;536:20;::::0;-1:-1:-1;;;;;536:12:0;::::1;::::0;:20;::::1;;;::::0;549:6;;536:20:::1;::::0;;;549:6;536:12;:20;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;383:180:::0;;:::o;14:131:1:-;-1:-1:-1;;;;;89:31:1;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:1:o;402:323::-;478:6;486;539:2;527:9;518:7;514:23;510:32;507:52;;;555:1;552;545:12;507:52;594:9;581:23;613:31;638:5;613:31;:::i;:::-;663:5;715:2;700:18;;;;687:32;;-1:-1:-1;;;402:323:1:o;730:409::-;932:2;914:21;;;971:2;951:18;;;944:30;1010:34;1005:2;990:18;;983:62;-1:-1:-1;;;1076:2:1;1061:18;;1054:43;1129:3;1114:19;;730:409::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    25,
    605
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA6F9DAE1 EQ PUSH2 0x2B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4B JUMPI JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29 PUSH2 0x46 CALLDATASIZE PUSH1 0x4 PUSH2 0x161 JUMP JUMPDEST PUSH2 0x6B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x57 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x29 PUSH2 0x66 CALLDATASIZE PUSH1 0x4 PUSH2 0x185 JUMP JUMPDEST PUSH2 0xA1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95 SWAP1 PUSH2 0x1B1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95 SWAP1 PUSH2 0x1B1 JUMP JUMPDEST DUP1 SELFBALANCE GT PUSH2 0x111 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x95 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x147 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x9E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x173 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x17E DUP2 PUSH2 0x14C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x198 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1A3 DUP2 PUSH2 0x14C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2D SWAP1 DUP3 ADD MSTORE PUSH32 0x54686973206D6574686F64206D7573742062652063616C6C65642066726F6D20 PUSH1 0x40 DUP3 ADD MSTORE PUSH13 0x6F776E65722061646472657373 PUSH1 0x98 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP3 0xCC ADDRESS PUSH5 0x3CAA6AC5CC DUP1 DELEGATECALL 0xE0 OR CALLDATASIZE DUP3 EXTCODEHASH 0xEB 0xE4 PUSH1 0xBE EXTCODECOPY PUSH8 0xD0E13361A39EF81E MLOAD DUP4 PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        25,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "5": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "8": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "LT",
      "path": "0"
    },
    "9": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29"
    },
    "12": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "13": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "CALLDATALOAD",
      "path": "0"
    },
    "16": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "SHR",
      "path": "0"
    },
    "19": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "20": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA6F9DAE1"
    },
    "25": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "EQ",
      "path": "0"
    },
    "26": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2B"
    },
    "29": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "30": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "DUP1",
      "path": "0"
    },
    "31": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "PUSH4",
      "path": "0",
      "value": "0xA9059CBB"
    },
    "36": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "EQ",
      "path": "0"
    },
    "37": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x4B"
    },
    "40": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "41": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "42": {
      "fn": null,
      "offset": [
        25,
        605
      ],
      "op": "STOP",
      "path": "0"
    },
    "43": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "44": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "45": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "DUP1",
      "path": "0"
    },
    "46": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "47": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x37"
    },
    "50": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "51": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "53": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "DUP1",
      "path": "0"
    },
    "54": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "REVERT",
      "path": "0"
    },
    "55": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "56": {
      "op": "POP"
    },
    "57": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29"
    },
    "60": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x46"
    },
    "63": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "64": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "66": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x161"
    },
    "69": {
      "fn": "Wallet.changeOwner",
      "jump": "i",
      "offset": [
        317,
        377
      ],
      "op": "JUMP",
      "path": "0"
    },
    "70": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "71": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x6B"
    },
    "74": {
      "fn": "Wallet.changeOwner",
      "jump": "i",
      "offset": [
        317,
        377
      ],
      "op": "JUMP",
      "path": "0"
    },
    "75": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "76": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "CALLVALUE",
      "path": "0"
    },
    "77": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "DUP1",
      "path": "0"
    },
    "78": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "79": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x57"
    },
    "82": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "83": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "85": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "DUP1",
      "path": "0"
    },
    "86": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "REVERT",
      "path": "0"
    },
    "87": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "88": {
      "op": "POP"
    },
    "89": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x29"
    },
    "92": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x66"
    },
    "95": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "96": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "98": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x185"
    },
    "101": {
      "fn": "Wallet.transfer",
      "jump": "i",
      "offset": [
        383,
        563
      ],
      "op": "JUMP",
      "path": "0"
    },
    "102": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "103": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xA1"
    },
    "106": {
      "fn": "Wallet.transfer",
      "jump": "i",
      "offset": [
        383,
        563
      ],
      "op": "JUMP",
      "path": "0"
    },
    "107": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "108": {
      "offset": [
        220,
        225
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "110": {
      "fn": "Wallet.changeOwner",
      "offset": [
        220,
        225
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "113": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "115": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "117": {
      "op": "SHL"
    },
    "118": {
      "op": "SUB"
    },
    "119": {
      "offset": [
        220,
        225
      ],
      "op": "AND",
      "path": "0"
    },
    "120": {
      "offset": [
        229,
        239
      ],
      "op": "CALLER",
      "path": "0"
    },
    "121": {
      "offset": [
        220,
        239
      ],
      "op": "EQ",
      "path": "0"
    },
    "122": {
      "offset": [
        212,
        289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x9E"
    },
    "125": {
      "offset": [
        212,
        289
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "126": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "128": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "129": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "133": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "135": {
      "op": "SHL"
    },
    "136": {
      "offset": [
        212,
        289
      ],
      "op": "DUP2",
      "path": "0"
    },
    "137": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "138": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "140": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "ADD",
      "path": "0"
    },
    "141": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "144": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "145": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B1"
    },
    "148": {
      "fn": "Wallet.changeOwner",
      "jump": "i",
      "offset": [
        212,
        289
      ],
      "op": "JUMP",
      "path": "0"
    },
    "149": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "150": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "152": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "153": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "DUP1",
      "path": "0"
    },
    "154": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "155": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "SUB",
      "path": "0"
    },
    "156": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "157": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "0"
    },
    "158": {
      "fn": "Wallet.changeOwner",
      "offset": [
        212,
        289
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "159": {
      "fn": "Wallet.changeOwner",
      "offset": [
        317,
        377
      ],
      "op": "POP",
      "path": "0"
    },
    "160": {
      "fn": "Wallet.changeOwner",
      "jump": "o",
      "offset": [
        317,
        377
      ],
      "op": "JUMP",
      "path": "0"
    },
    "161": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "162": {
      "offset": [
        220,
        225
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "164": {
      "fn": "Wallet.transfer",
      "offset": [
        220,
        225
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "165": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "169": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "171": {
      "op": "SHL"
    },
    "172": {
      "op": "SUB"
    },
    "173": {
      "offset": [
        220,
        225
      ],
      "op": "AND",
      "path": "0"
    },
    "174": {
      "offset": [
        229,
        239
      ],
      "op": "CALLER",
      "path": "0"
    },
    "175": {
      "offset": [
        220,
        239
      ],
      "op": "EQ",
      "path": "0"
    },
    "176": {
      "offset": [
        212,
        289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xCB"
    },
    "179": {
      "offset": [
        212,
        289
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "180": {
      "fn": "Wallet.transfer",
      "offset": [
        212,
        289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "182": {
      "fn": "Wallet.transfer",
      "offset": [
        212,
        289
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "183": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "187": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "189": {
      "op": "SHL"
    },
    "190": {
      "offset": [
        212,
        289
      ],
      "op": "DUP2",
      "path": "0"
    },
    "191": {
      "fn": "Wallet.transfer",
      "offset": [
        212,
        289
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "192": {
      "fn": "Wallet.transfer",
      "offset": [
        212,
        289
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "194": {
      "fn": "Wallet.transfer",
      "offset": [
        212,
        289
      ],
      "op": "ADD",
      "path": "0"
    },
    "195": {
      "fn": "Wallet.transfer",
      "offset": [
        212,
        289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "198": {
      "fn": "Wallet.transfer",
      "offset": [
        212,
        289
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "199": {
      "fn": "Wallet.transfer",
      "offset": [
        212,
        289
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1B1"
    },
    "202": {
      "fn": "Wallet.transfer",
      "jump": "i",
      "offset": [
        212,
        289
      ],
      "op": "JUMP",
      "path": "0"
    },
    "203": {
      "fn": "Wallet.transfer",
      "offset": [
        212,
        289
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "204": {
      "fn": "Wallet.transfer",
      "offset": [
        494,
        500
      ],
      "op": "DUP1",
      "path": "0",
      "statement": 0
    },
    "205": {
      "fn": "Wallet.transfer",
      "offset": [
        470,
        491
      ],
      "op": "SELFBALANCE",
      "path": "0"
    },
    "206": {
      "branch": 2,
      "fn": "Wallet.transfer",
      "offset": [
        470,
        500
      ],
      "op": "GT",
      "path": "0"
    },
    "207": {
      "fn": "Wallet.transfer",
      "offset": [
        462,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x111"
    },
    "210": {
      "branch": 2,
      "fn": "Wallet.transfer",
      "offset": [
        462,
        525
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "211": {
      "fn": "Wallet.transfer",
      "offset": [
        462,
        525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "213": {
      "fn": "Wallet.transfer",
      "offset": [
        462,
        525
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "214": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "218": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "220": {
      "op": "SHL"
    },
    "221": {
      "fn": "Wallet.transfer",
      "offset": [
        462,
        525
      ],
      "op": "DUP2",
      "path": "0"
    },
    "222": {
      "fn": "Wallet.transfer",
      "offset": [
        462,
        525
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "223": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "225": {
      "fn": "Wallet.transfer",
      "offset": [
        462,
        525
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "227": {
      "fn": "Wallet.transfer",
      "offset": [
        462,
        525
      ],
      "op": "DUP3",
      "path": "0"
    },
    "228": {
      "fn": "Wallet.transfer",
      "offset": [
        462,
        525
      ],
      "op": "ADD",
      "path": "0"
    },
    "229": {
      "op": "MSTORE"
    },
    "230": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "232": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "234": {
      "op": "DUP3"
    },
    "235": {
      "op": "ADD"
    },
    "236": {
      "op": "MSTORE"
    },
    "237": {
      "op": "PUSH20",
      "value": "0x496E73756666696369656E742062616C616E6365"
    },
    "258": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "260": {
      "op": "SHL"
    },
    "261": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "263": {
      "op": "DUP3"
    },
    "264": {
      "op": "ADD"
    },
    "265": {
      "op": "MSTORE"
    },
    "266": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "268": {
      "op": "ADD"
    },
    "269": {
      "fn": "Wallet.transfer",
      "offset": [
        462,
        525
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95"
    },
    "272": {
      "op": "JUMP"
    },
    "273": {
      "fn": "Wallet.transfer",
      "offset": [
        462,
        525
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "274": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 1,
      "value": "0x40"
    },
    "276": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "277": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "279": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "281": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "283": {
      "op": "SHL"
    },
    "284": {
      "op": "SUB"
    },
    "285": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        548
      ],
      "op": "DUP4",
      "path": "0"
    },
    "286": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        548
      ],
      "op": "AND",
      "path": "0"
    },
    "287": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        548
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "288": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "DUP3",
      "path": "0"
    },
    "289": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "290": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FC"
    },
    "293": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "MUL",
      "path": "0"
    },
    "294": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "295": {
      "fn": "Wallet.transfer",
      "offset": [
        549,
        555
      ],
      "op": "DUP4",
      "path": "0"
    },
    "296": {
      "fn": "Wallet.transfer",
      "offset": [
        549,
        555
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "297": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "299": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "DUP2",
      "path": "0"
    },
    "300": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "DUP2",
      "path": "0"
    },
    "301": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "DUP2",
      "path": "0"
    },
    "302": {
      "fn": "Wallet.transfer",
      "offset": [
        549,
        555
      ],
      "op": "DUP6",
      "path": "0"
    },
    "303": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        548
      ],
      "op": "DUP9",
      "path": "0"
    },
    "304": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "DUP9",
      "path": "0"
    },
    "305": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "CALL",
      "path": "0"
    },
    "306": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "SWAP4",
      "path": "0"
    },
    "307": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "POP",
      "path": "0"
    },
    "308": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "POP",
      "path": "0"
    },
    "309": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "POP",
      "path": "0"
    },
    "310": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "POP",
      "path": "0"
    },
    "311": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "312": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "DUP1",
      "path": "0"
    },
    "313": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "ISZERO",
      "path": "0"
    },
    "314": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x147"
    },
    "317": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "318": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "319": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "321": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "DUP1",
      "path": "0"
    },
    "322": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "RETURNDATACOPY",
      "path": "0"
    },
    "323": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "RETURNDATASIZE",
      "path": "0"
    },
    "324": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "326": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "REVERT",
      "path": "0"
    },
    "327": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "328": {
      "fn": "Wallet.transfer",
      "offset": [
        536,
        556
      ],
      "op": "POP",
      "path": "0"
    },
    "329": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "POP",
      "path": "0"
    },
    "330": {
      "fn": "Wallet.transfer",
      "offset": [
        383,
        563
      ],
      "op": "POP",
      "path": "0"
    },
    "331": {
      "fn": "Wallet.transfer",
      "jump": "o",
      "offset": [
        383,
        563
      ],
      "op": "JUMP",
      "path": "0"
    },
    "332": {
      "op": "JUMPDEST"
    },
    "333": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "335": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "337": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "339": {
      "op": "SHL"
    },
    "340": {
      "op": "SUB"
    },
    "341": {
      "op": "DUP2"
    },
    "342": {
      "op": "AND"
    },
    "343": {
      "op": "DUP2"
    },
    "344": {
      "op": "EQ"
    },
    "345": {
      "op": "PUSH2",
      "value": "0x9E"
    },
    "348": {
      "op": "JUMPI"
    },
    "349": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "351": {
      "op": "DUP1"
    },
    "352": {
      "op": "REVERT"
    },
    "353": {
      "op": "JUMPDEST"
    },
    "354": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "358": {
      "op": "DUP3"
    },
    "359": {
      "op": "DUP5"
    },
    "360": {
      "op": "SUB"
    },
    "361": {
      "op": "SLT"
    },
    "362": {
      "op": "ISZERO"
    },
    "363": {
      "op": "PUSH2",
      "value": "0x173"
    },
    "366": {
      "op": "JUMPI"
    },
    "367": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "369": {
      "op": "DUP1"
    },
    "370": {
      "op": "REVERT"
    },
    "371": {
      "op": "JUMPDEST"
    },
    "372": {
      "op": "DUP2"
    },
    "373": {
      "op": "CALLDATALOAD"
    },
    "374": {
      "op": "PUSH2",
      "value": "0x17E"
    },
    "377": {
      "op": "DUP2"
    },
    "378": {
      "op": "PUSH2",
      "value": "0x14C"
    },
    "381": {
      "jump": "i",
      "op": "JUMP"
    },
    "382": {
      "op": "JUMPDEST"
    },
    "383": {
      "op": "SWAP4"
    },
    "384": {
      "op": "SWAP3"
    },
    "385": {
      "op": "POP"
    },
    "386": {
      "op": "POP"
    },
    "387": {
      "op": "POP"
    },
    "388": {
      "jump": "o",
      "op": "JUMP"
    },
    "389": {
      "op": "JUMPDEST"
    },
    "390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "392": {
      "op": "DUP1"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "395": {
      "op": "DUP4"
    },
    "396": {
      "op": "DUP6"
    },
    "397": {
      "op": "SUB"
    },
    "398": {
      "op": "SLT"
    },
    "399": {
      "op": "ISZERO"
    },
    "400": {
      "op": "PUSH2",
      "value": "0x198"
    },
    "403": {
      "op": "JUMPI"
    },
    "404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "406": {
      "op": "DUP1"
    },
    "407": {
      "op": "REVERT"
    },
    "408": {
      "op": "JUMPDEST"
    },
    "409": {
      "op": "DUP3"
    },
    "410": {
      "op": "CALLDATALOAD"
    },
    "411": {
      "op": "PUSH2",
      "value": "0x1A3"
    },
    "414": {
      "op": "DUP2"
    },
    "415": {
      "op": "PUSH2",
      "value": "0x14C"
    },
    "418": {
      "jump": "i",
      "op": "JUMP"
    },
    "419": {
      "op": "JUMPDEST"
    },
    "420": {
      "op": "SWAP5"
    },
    "421": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "423": {
      "op": "SWAP4"
    },
    "424": {
      "op": "SWAP1"
    },
    "425": {
      "op": "SWAP4"
    },
    "426": {
      "op": "ADD"
    },
    "427": {
      "op": "CALLDATALOAD"
    },
    "428": {
      "op": "SWAP4"
    },
    "429": {
      "op": "POP"
    },
    "430": {
      "op": "POP"
    },
    "431": {
      "op": "POP"
    },
    "432": {
      "jump": "o",
      "op": "JUMP"
    },
    "433": {
      "op": "JUMPDEST"
    },
    "434": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "436": {
      "op": "DUP1"
    },
    "437": {
      "op": "DUP3"
    },
    "438": {
      "op": "MSTORE"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x2D"
    },
    "441": {
      "op": "SWAP1"
    },
    "442": {
      "op": "DUP3"
    },
    "443": {
      "op": "ADD"
    },
    "444": {
      "op": "MSTORE"
    },
    "445": {
      "op": "PUSH32",
      "value": "0x54686973206D6574686F64206D7573742062652063616C6C65642066726F6D20"
    },
    "478": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "480": {
      "op": "DUP3"
    },
    "481": {
      "op": "ADD"
    },
    "482": {
      "op": "MSTORE"
    },
    "483": {
      "op": "PUSH13",
      "value": "0x6F776E65722061646472657373"
    },
    "497": {
      "op": "PUSH1",
      "value": "0x98"
    },
    "499": {
      "op": "SHL"
    },
    "500": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "502": {
      "op": "DUP3"
    },
    "503": {
      "op": "ADD"
    },
    "504": {
      "op": "MSTORE"
    },
    "505": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "507": {
      "op": "ADD"
    },
    "508": {
      "op": "SWAP1"
    },
    "509": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "ba750a9dc33b881e50fa54516c15a083aa1e54fe",
  "source": "pragma solidity ^0.8.0;\n\ncontract Wallet {\n    address owner;\n\n    event OwnerChanged(address oldOwner, address newOwner);\n\n    constructor() {\n        owner = msg.sender;\n    }\n\n    modifier onlyowner {\n        require(owner == msg.sender, \"This method must be called from owner address\");\n        _;\n    }\n    \n    function changeOwner(address _to) onlyowner external {\n    }\n\n    function transfer(address payable _to, uint amount) onlyowner public {\n        require(address(this).balance > amount, \"Insufficient balance\");\n\n        _to.transfer(amount);\n    }\n    \n    fallback() external payable {}\n}\n",
  "sourceMap": "25:580:0:-:0;;;128:49;;;;;;;;;-1:-1:-1;152:5:0;:18;;-1:-1:-1;;;;;;152:18:0;160:10;152:18;;;25:580;;;;;;",
  "sourcePath": "contracts/Wallet.sol",
  "type": "contract"
}